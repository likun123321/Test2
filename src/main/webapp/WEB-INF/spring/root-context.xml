<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/jdbc
 	http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
 	http://www.springframework.org/schema/aop 
 	http://www.springframework.org/schema/aop/spring-aop.xsd
 	http://www.springframework.org/schema/task  
	http://www.springframework.org/schema/task/spring-task.xsd">

	<!-- 加载数据源配置文件 -->
	<bean id = "configProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<!-- 标准配置 -->
				<value>classpath:/jdbc.properties</value>
			</list>
		</property>
	</bean>	
 	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="false" />
        <property name="properties" ref="configProperties" />
    </bean>
	
	<!-- 配置数据源 -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"  destroy-method="close">
		<property name="driverClass" value="${ad.jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${ad.jdbc.url}" />
		<property name="user" value="${ad.jdbc.username}" />
		<property name="password" value="${ad.jdbc.password}" />
		
		<!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0-->  
        <property name="maxIdleTime" value="${ad.c3p0.maxIdleTime}"/> 
		<!-- 指定连接池中保留的最大连接数. Default:15-->  
        <property name="maxPoolSize" value="${ad.c3p0.maxPoolSize}"/>  
        <!-- 指定连接池中保留的最小连接数-->  
        <property name="minPoolSize" value="${ad.c3p0.minPoolSize}"/>  
        <!-- 指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3-->  
        <property name="initialPoolSize" value="${ad.c3p0.initialPoolSize}"/> 	
		<!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3-->  	
		<property name="acquireIncrement" value="${ad.c3p0.acquireIncrement}"/>
		<!-- 每60秒检查所有连接池中的空闲连接.Default:0 -->  
		<property name="idleConnectionTestPeriod" value="${ad.c3p0.idleConnectionTestPeriod}"/> 
	</bean>
	
	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<aop:aspectj-autoproxy proxy-target-class="true" /> 
	<context:component-scan base-package="com.wenjuan">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />	 	
	</context:component-scan>
 
	<!-- enable autowire -->
	<context:annotation-config />
	<!-- enable transaction demarcation with annotations -->
	<tx:annotation-driven />

	<context:component-scan base-package="com.wenjuan.service"></context:component-scan>
	<!-- task任务扫描注解 -->
	<task:annotation-driven />
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.wenjuan.entity" />
	</bean>

	<!-- 自动扫描和注册Mapper接口 basePackage是用来指定Mapper接口文件所在的基包， 在这个基包或其所有子包下面的Mapper接口都将被搜索到。 
		多个基包之间可以使用逗号或者分号进行分隔 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.wenjuan.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<!-- spring session相关配置 
	<bean class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration"> 
	    <property name="maxInactiveIntervalInSeconds" value="1800"></property>
	</bean>    
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" />    
	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
 
	p:host-name="${redisHost}" p:Database="0" p:port="${redisPort}" p:password="${redisPwd}"  p:pool-config-ref="poolConfig"/>
	-->
</beans>